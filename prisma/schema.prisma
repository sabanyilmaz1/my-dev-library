generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Page {
  id          String   @id @default(uuid())
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String
  tags        Json[]
  title       String
  url         String   @unique
  thumbnail   String   @default("")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("page")
}

model Tag {
  id            String @id @default(uuid())
  label         String
  value         String
  userId        String
  numbers_pages Int    @default(0)
  user          User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([label, value])
  @@map("tag")
}

model User {
  id               String    @id
  name             String
  email            String    @unique
  emailVerified    Boolean
  image            String?
  createdAt        DateTime
  updatedAt        DateTime
  stripeCustomerId String?
  accounts         Account[]
  pages            Page[]
  sessions         Session[]
  tags             Tag[]

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
